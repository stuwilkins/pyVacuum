#!/usr/bin/python
#
# pyVacuum.py (c) Stuart B. Wilkins 2008
#
# $Id: pyVacuum 86 2009-01-05 02:23:55Z swilkins $
# $HeadURL: https://solids.phy.bnl.gov/svn/pyVacuum/scripts/pyVacuum $
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

import sys
import os.path
import signal

from pyVacuum import config
import logging as log

# Logfile
logging = log.getLogger(__name__)

from pyVacuum import mainwindow
from PyQt4 import QtCore, QtGui

try:
    import cothread
    _ct = True
except ImportError:
    _ct = False

def sigint_handler(*args):
    """Handler for the SIGINT signal."""
    sys.stderr.write('\n\nExiting due to ^C.....\n')
    if _ct:
        Quit()
    else:
        QtGui.QApplication.quit()

if __name__ == "__main__":

    # Wait for SIGINT

    signal.signal(signal.SIGINT, sigint_handler)

    # We have to find a config file.
    # so lets add some directories to the path

    if not _ct:
        logging.warn("No EPICS support (no cothread module)")
        app = QtGui.QApplication(sys.argv)
    else:
        logging.info("Using cothread for EPICS support")
        app = cothread.iqt()
    myapp = mainwindow.pyVacWindow()
    myapp.show()
    if _ct:
        cothread.WaitForQuit()
    else:
        sys.exit(app.exec_())
